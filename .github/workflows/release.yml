on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  release:
    name: Publish and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Publish Linux
        run: |
          dotnet publish -c Release -r "linux-x64" -p:PublishSingleFile=true --nologo src/Puako/Puako.csproj && \
            tar -czf puako_linux-x64.tar.gz -C src/Puako/bin/Release/netcoreapp3.1/linux-x64/publish puako
      - name: Publish RHEL
        run: |
          dotnet publish -c Release -r "rhel-x64" -p:PublishSingleFile=true --nologo src/Puako/Puako.csproj && \
            tar -czf puako_rhel-x64.tar.gz -C src/Puako/bin/Release/netcoreapp3.1/rhel-x64/publish puako
      - name: Publish OSX
        run: |
          dotnet publish -c Release -r "osx-x64" -p:PublishSingleFile=true --nologo src/Puako/Puako.csproj && \
            tar -czf puako_osx-x64.tar.gz -C src/Puako/bin/Release/netcoreapp3.1/osx-x64/publish puako
      - name: Publish Windows
        run: |
          dotnet publish -c Release -r "win-x64" -p:PublishSingleFile=true --nologo src/Puako/Puako.csproj && \
            zip puako_win-x64.zip -j src/Puako/bin/Release/netcoreapp3.1/win-x64/publish/puako.exe
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./puako_linux-x64.tar.gz
          asset_name: puako_${{ github.ref }}_linux-x64.tar.gz
          asset_content_type: application/gzip
      - name: Upload RHEL Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./puako_rhel-x64.tar.gz
          asset_name: puako_${{ github.ref }}_rhel-x64.tar.gz
          asset_content_type: application/gzip
      - name: Upload OSX Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./puako_osx-x64.tar.gz
          asset_name: puako_${{ github.ref }}_osx-x64.tar.gz
          asset_content_type: application/gzip
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./puako_win-x64.zip
          asset_name: puako_${{ github.ref }}_win-x64.zip
          asset_content_type: application/zip
